"""empty message

Revision ID: 01af2e30f00f
Revises: 934a3cbf960d
Create Date: 2025-09-01 09:58:42.983980

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01af2e30f00f'
down_revision = '934a3cbf960d'
branch_labels = None
depends_on = None


old_options = ('APPLICATION_SUBMITTED', 'INVOICE_GENERATED', 'PAYMENT_COMPLETE', 'PENDING_AUTO_APPROVAL_PROCESSING', 'AUTO_APPROVAL_FULL_REVIEW', 'AUTO_APPROVAL_PROVISIONAL', 'AUTO_APPROVAL_APPROVED', 'FULL_REVIEW_IN_PROGRESS', 'MANUALLY_APPROVED', 'MANUALLY_DENIED', 'MORE_INFORMATION_REQUESTED', 'REGISTRATION_CREATED', 'CERTIFICATE_ISSUED', 'REGISTRATION_EXPIRED', 'NON_COMPLIANCE_SUSPENDED', 'REGISTRATION_CANCELLED', 'APPLICATION_REVIEWER_ASSIGNED', 'APPLICATION_REVIEWER_UNASSIGNED', 'NOC_SENT', 'NOC_EXPIRED', 'HOST_APPLICATION_UNIT_ADDRESS_UPDATED', 'HOST_REGISTRATION_UNIT_ADDRESS_UPDATED', 'APPLICATION_DECISION_SET_ASIDE', 'REGISTRATION_REINSTATED', 'REGISTRATION_DECISION_SET_ASIDE', 'REGISTRATION_DOCUMENT_UPLOADED', 'REGISTRATION_ASSIGNEE_ASSIGNED', 'REGISTRATION_ASSIGNEE_UNASSIGNED', 'CONDITIONS_OF_APPROVAL_UPDATED')
new_options = ('APPLICATION_SUBMITTED', 'INVOICE_GENERATED', 'PAYMENT_COMPLETE', 'PENDING_AUTO_APPROVAL_PROCESSING', 'AUTO_APPROVAL_FULL_REVIEW', 'AUTO_APPROVAL_PROVISIONAL', 'AUTO_APPROVAL_APPROVED', 'FULL_REVIEW_IN_PROGRESS', 'MANUALLY_APPROVED', 'MANUALLY_DENIED', 'MORE_INFORMATION_REQUESTED', 'REGISTRATION_CREATED', 'CERTIFICATE_ISSUED', 'REGISTRATION_EXPIRED', 'NON_COMPLIANCE_SUSPENDED', 'REGISTRATION_CANCELLED', 'APPLICATION_REVIEWER_ASSIGNED', 'APPLICATION_REVIEWER_UNASSIGNED', 'NOC_SENT', 'NOC_EXPIRED', 'HOST_APPLICATION_UNIT_ADDRESS_UPDATED', 'HOST_REGISTRATION_UNIT_ADDRESS_UPDATED', 'APPLICATION_DECISION_SET_ASIDE', 'REGISTRATION_REINSTATED', 'REGISTRATION_DECISION_SET_ASIDE', 'REGISTRATION_DOCUMENT_UPLOADED', 'REGISTRATION_ASSIGNEE_ASSIGNED', 'REGISTRATION_ASSIGNEE_UNASSIGNED', 'CONDITIONS_OF_APPROVAL_UPDATED', 'REGISTRATION_APPROVED')

old_type = sa.Enum(*old_options, name='eventname')
new_type = sa.Enum(*new_options, name='eventname')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TYPE eventname RENAME TO tmp_eventname')
    new_type.create(op.get_bind())
    op.execute('ALTER TABLE events ALTER COLUMN event_name TYPE eventname USING event_name::text::eventname')
    op.execute('DROP TYPE tmp_eventname')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TYPE eventname RENAME TO tmp_eventname')
    old_type.create(op.get_bind())
    op.execute('ALTER TABLE events ALTER COLUMN event_name TYPE eventname USING event_name::text::eventname')
    op.execute('DROP TYPE tmp_eventname')
    # ### end Alembic commands ###
